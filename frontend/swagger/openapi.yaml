openapi: 3.0.0
info:
  title: Ćevabdžinica Zmaj API
  description: REST API dokumentacija za sve entitete
  version: 1.0.0

servers:
  - url: http://localhost/FarisMeric/Introduction-to-Web-Programming/backend

paths:
  /products:
    get:
      tags: [Products]
      summary: Vrati sve proizvode
      responses:
        '200':
          description: Lista proizvoda
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      tags: [Products]
      summary: Dodaj novi proizvod
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Proizvod uspješno dodan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    get:
      tags: [Products]
      summary: Vrati proizvod po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji proizvoda
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Proizvod nije pronađen
    put:
      tags: [Products]
      summary: Ažuriraj proizvod po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: Proizvod ažuriran
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags: [Products]
      summary: Obriši proizvod po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Proizvod obrisan

  /users:
    get:
      tags: [Users]
      summary: Vrati sve korisnike
      responses:
        '200':
          description: Lista korisnika
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags: [Users]
      summary: Dodaj novog korisnika
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Korisnik uspješno dodan

  /users/{id}:
    get:
      tags: [Users]
      summary: Vrati korisnika po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji korisnika
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Korisnik nije pronađen
    put:
      tags: [Users]
      summary: Ažuriraj korisnika po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Korisnik ažuriran
    delete:
      tags: [Users]
      summary: Obriši korisnika po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Korisnik obrisan

  /orders:
    get:
      tags: [Orders]
      summary: Vrati sve narudžbe
      responses:
        '200':
          description: Lista narudžbi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      tags: [Orders]
      summary: Dodaj novu narudžbu
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Narudžba uspješno dodana
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /orders/{id}:
    get:
      tags: [Orders]
      summary: Vrati narudžbu po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji narudžbe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Narudžba nije pronađena
    put:
      tags: [Orders]
      summary: Ažuriraj narudžbu po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Narudžba ažurirana
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    delete:
      tags: [Orders]
      summary: Obriši narudžbu po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Narudžba obrisana

  /order_items:
    get:
      tags: [Order Items]
      summary: Vrati sve stavke narudžbi
      responses:
        '200':
          description: Lista stavki narudžbi
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
    post:
      tags: [Order Items]
      summary: Dodaj novu stavku narudžbe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          description: Stavka uspješno dodana
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'

  /order_items/{id}:
    get:
      tags: [Order Items]
      summary: Vrati stavku narudžbe po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji stavke
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
        '404':
          description: Stavka nije pronađena
    put:
      tags: [Order Items]
      summary: Ažuriraj stavku narudžbe po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderItem'
      responses:
        '200':
          description: Stavka ažurirana
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
    delete:
      tags: [Order Items]
      summary: Obriši stavku narudžbe po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Stavka narudžbe obrisana

  /categories:
    get:
      tags: [Categories]
      summary: Vrati sve kategorije
      responses:
        '200':
          description: Lista kategorija
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      tags: [Categories]
      summary: Dodaj novu kategoriju
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Kategorija uspješno dodana

  /categories/{id}:
    get:
      tags: [Categories]
      summary: Vrati kategoriju po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Detalji kategorije
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Kategorija nije pronađena
    put:
      tags: [Categories]
      summary: Ažuriraj kategoriju po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
      responses:
        '200':
          description: Kategorija ažurirana
    delete:
      tags: [Categories]
      summary: Obriši kategoriju po ID-u
      parameters:
        - name: id
          in: path
          required: true
          schema: { type: integer }
      responses:
        '200':
          description: Kategorija obrisana

components:
  schemas:
    Product:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }
        price: { type: number, format: float }
        category_id: { type: integer }
        image_url: { type: string }
        created_at: { type: string, format: date-time }

    User:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        email: { type: string }
        password: { type: string }
        role: { type: string }

    Order:
      type: object
      properties:
        id: { type: integer }
        user_id: { type: integer }
        total_price: { type: number, format: float }
        status: { type: string }
        created_at: { type: string, format: date-time }

    OrderItem:
      type: object
      properties:
        id: { type: integer }
        order_id: { type: integer }
        product_id: { type: integer }
        quantity: { type: integer }
        price: { type: number, format: float }

    Category:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }
